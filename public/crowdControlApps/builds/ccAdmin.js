eval("(function() {\n\nEmber.TEMPLATES[\"artists\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                    <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowPlaylist\", \"\", {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></li>\\n                \");\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes;\n  data.buffer.push(\"\\n                <tr class=\\\"clickable-row\\\" \");\n  hashContexts = {'bubbles': depth0};\n  hashTypes = {'bubbles': \"BOOLEAN\"};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickEdit\", {hash:{\n    'bubbles': (false)\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\\n                    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"isEdit\", {hash:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"            \\n                </tr>\\n            \");\n  return buffer;\n  }\nfunction program4(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n                        <td class=\\\"w25\\\">\");\n  hashContexts = {'class': depth0,'type': depth0,'value': depth0};\n  hashTypes = {'class': \"STRING\",'type': \"STRING\",'value': \"ID\"};\n  options = {hash:{\n    'class': (\"form-control w50\"),\n    'type': (\"text\"),\n    'value': (\"nameEdit\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || (depth0 && depth0.input)),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"</td>\\n                        <td class=\\\"w25\\\">\");\n  hashContexts = {'multiple': depth0,'value': depth0};\n  hashTypes = {'multiple': \"STRING\",'value': \"ID\"};\n  options = {hash:{\n    'multiple': (\"multiple\"),\n    'value': (\"tagsEdit\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['select-2'] || (depth0 && depth0['select-2'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"select-2\", options))));\n  data.buffer.push(\" <button class=\\\"btn btn-default\\\" \");\n  hashContexts = {'bubbles': depth0};\n  hashTypes = {'bubbles': \"BOOLEAN\"};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickDone\", {hash:{\n    'bubbles': (false)\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Done</button> </td>  \\n                    \");\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = '', hashContexts, hashTypes;\n  data.buffer.push(\"  \\n                        <td class=\\\"w25\\\"><span class=\\\"glyphicon glyphicon-trash table-remove\\\" \");\n  hashContexts = {'bubbles': depth0};\n  hashTypes = {'bubbles': \"BOOLEAN\"};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickDelete\", \"\", {hash:{\n    'bubbles': (false)\n  },contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"></span>  \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</td>\\n                        <td class=\\\"w25\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"tags\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" </td>\\n                    \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"header\\\" style=\\\"margin-top:19px;\\\">\\n    <div class=\\\"pull-right menu-items\\\">\\n        <div class=\\\"btn-group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                Show <span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n                <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowAllSongs\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">All Songs</a></li>\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"allPlaylists\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                <li class=\\\"divider\\\"></li>\\n                <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowPlays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Plays</a></li>\\n                <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowNays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Nays</a></li>\\n            </ul>\\n        </div>\\n    </div>\\n    <h3 class=\\\"pb0\\\">Edit Artists</h3>\\n\\n    <table class=\\\"table table-hover w75\\\">\\n        <thead>\\n            <tr>\\n                <th class=\\\"w25\\\">Name</th>\\n                <th class=\\\"w25\\\">Tags</th>\\n            </th>\\n        </thead>\\n        <tbody>\\n            \");\n  hashContexts = {'itemController': depth0};\n  hashTypes = {'itemController': \"STRING\"};\n  stack1 = helpers.each.call(depth0, {hash:{\n    'itemController': (\"artist\")\n  },inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n        </tbody>\\n    </table>  \\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" \");\n  hashContexts = {'bubbles': depth0};\n  hashTypes = {'bubbles': \"BOOLEAN\"};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickAdd\", {hash:{\n    'bubbles': (false)\n  },contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\\n        Add Artist\\n    </button>\\n</div>\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"main\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, stack2, hashContexts, hashTypes, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"<a href=\\\"#\\\">Edit Artists</a>\");\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"<a href=\\\"#\\\">Edit Songs</a>\");\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  data.buffer.push(\"<a href=\\\"#\\\">Edit Playlists</a>\");\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  data.buffer.push(\"<a href=\\\"#\\\">Edit Tabs</a>\");\n  }\n\nfunction program9(depth0,data) {\n  \n  \n  data.buffer.push(\"<a href=\\\"#\\\">Edit Users</a>\");\n  }\n\n  data.buffer.push(\"<div class=\\\"container\\\">\\n\t<div class=\\\"clearfix\\\">\\n\t\t<span class=\\\"pull-right main-label\\\">Crowd Control</span>\\n\t\t<ul class=\\\"nav nav-tabs\\\">\\n            \");\n  hashContexts = {'tagName': depth0};\n  hashTypes = {'tagName': \"STRING\"};\n  options = {hash:{\n    'tagName': (\"li\")\n  },inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"artists\", options) : helperMissing.call(depth0, \"link-to\", \"artists\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n            \");\n  hashContexts = {'tagName': depth0};\n  hashTypes = {'tagName': \"STRING\"};\n  options = {hash:{\n    'tagName': (\"li\")\n  },inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"songs\", options) : helperMissing.call(depth0, \"link-to\", \"songs\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n            \");\n  hashContexts = {'tagName': depth0};\n  hashTypes = {'tagName': \"STRING\"};\n  options = {hash:{\n    'tagName': (\"li\")\n  },inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"playlists\", options) : helperMissing.call(depth0, \"link-to\", \"playlists\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n            \");\n  hashContexts = {'tagName': depth0};\n  hashTypes = {'tagName': \"STRING\"};\n  options = {hash:{\n    'tagName': (\"li\")\n  },inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"tabs\", options) : helperMissing.call(depth0, \"link-to\", \"tabs\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n            \");\n  hashContexts = {'tagName': depth0};\n  hashTypes = {'tagName': \"STRING\"};\n  options = {hash:{\n    'tagName': (\"li\")\n  },inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"users\", options) : helperMissing.call(depth0, \"link-to\", \"users\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n\t    </ul>\\n\t</div>\\n\t\\n    \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\t\\n    <div class=\\\"footer\\\">\\n\t\t<p>&copy; Erika 2014</p>\\n\t</div>\\n</div>\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"songs\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                    <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowPlaylist\", \"\", {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></li>\\n                \");\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n        <p>\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"displayText\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</p>\\n    \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"header\\\" style=\\\"margin-top:19px;\\\">\\n    <div class=\\\"pull-right menu-items\\\">\\n        <div class=\\\"btn-group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                Show <span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n                <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowAllSongs\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">All Songs</a></li>\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"allPlaylists\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                <li class=\\\"divider\\\"></li>\\n                <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowPlays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Plays</a></li>\\n                <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowNays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Nays</a></li>\\n            </ul>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Print</button>\\n    </div>\\n    <h3 class=\\\"pb0\\\">Edit Songs</h3>\\n    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n</div>\\n\");\n  return buffer;\n  \n});\n\n})();//@ sourceURL=adminApp/templates.js")

eval("(function() {\n\n// Kick off Ember\nCCAdmin = Ember.Application.create({\n    rootElement: '#application',\n});\n\n// Components\nCCAdmin.Select2Component = Ember.TextField.extend({\n    didInsertElement: function() {\n        this.$().select2({\n            width: 'element',\n            tags: [],\n            tokenSeparators: [',']\n        });\n    }\n});\n\n// Views\nCCAdmin.MainView = Ember.View.extend({\n    click: function() {\n        this.get('controller').send('clearEdits');\n    }\n});\n\n// Controllers\nCCAdmin.MainController = Ember.ObjectController.extend({\n\n});\n\nCCAdmin.SongsController = Ember.ArrayController.extend({\n\n});\n\nCCAdmin.ArtistController = Ember.ObjectController.extend({\n    actions: {\n        clickEdit: function() {\n            if (this.get('isNew') !== true) {\n                this.send('clearEdits');\n                this.setProperties({\n                    isEdit: true,\n                    nameEdit: this.get('name'),\n                    tagsEdit: !Ember.isNone(this.get('tags')) ? this.get('tags').join(',') : []\n                });\n            }\n        },\n        clickDone: function() {\n            var self = this;\n            this.setProperties({\n                isEdit: undefined,\n                isNew: undefined,\n                name: this.get('nameEdit'),\n                tags: !Ember.isEmpty(this.get('tagsEdit')) ? this.get('tagsEdit').split(',') : undefined\n            });\n\n            if (!Ember.isNone(this.get('id'))) {\n                dpd.artists.put(this.get('content'));\n            } else {\n                dpd.artists.post(this.get('content'), function(result, error) {\n                    if (!Ember.isNone(result)) {\n                        self.set('id', result.id);\n                    }\n                });\n            }\n        },\n        clickDelete: function(obj) {\n            var self = this;\n            dpd.artists.del(this.get('id'), function(result, error) {\n                if (!Ember.isNone(result)) {\n                   self.get('parentController').removeObject(obj);\n                }\n            });\n        }\n    }\n});\n\n\n// Routes\nCCAdmin.MainRoute = Ember.Route.extend({\n    model: function() {\n        return new Ember.RSVP.Promise(function(resolve, reject) {\n            var coupleData = Ember.Object.create();\n            dpd.users.me(function(result, error) {\n                console.log(result)\n                var emberObject = Ember.Object.create(result);\n                resolve(emberObject);\n            });\n        });\n    },\n    afterModel: function() {\n        this.transitionTo('artists');\n    }\n});\n\nCCAdmin.ArtistsRoute = Ember.Route.extend({\n    model: function() {\n        return new Ember.RSVP.Promise(function(resolve, reject) {\n            dpd.artists.get(function(result, error) {\n                if (!Ember.isNone(result)) {\n                    resolve(result);\n                } else if (!Ember.isNone(error)) {\n                    reject(error);\n                }\n            });\n        });\n    },\n    actions: {\n        clearEdits: function() {\n            var artists = this.get('controller');\n            artists.removeObject(artists.findBy('isNew'));\n            artists.setEach('isEdit', undefined);\n        },\n        clickAdd: function() {\n            this.get('controller').addObject({\n                name: '',\n                tags: [],\n                isEdit: true,\n                isNew: true\n            });\n        }\n    }\n});\n\nCCAdmin.SongsRoute = Ember.Route.extend({\n    model: function() {\n        return new Ember.RSVP.Promise(function(resolve, reject) {\n            dpd.songs.get(function(result, error) {\n                if (!Ember.isNone(result)) {\n                    resolve(result);\n                } else if (!Ember.isNone(error)) {\n                    reject(error);\n                }\n            });\n        });\n    }\n});\n\n// Router\nCCAdmin.Router.map(function() {\n    this.resource('main', { path: '/' }, function() {\n        this.resource('artists', { path: '/artists'});\n        this.resource('songs', { path: '/songs'});\n        this.resource('playlists', { path: '/playlists'});\n        this.resource('tabs', { path: '/tabs'});\n        this.resource('users', { path: '/users'});\n    });\n});\n\n// This setting disables the detail routing from showing up in the navbar.\nCCAdmin.Router.reopen( {\n    location: 'none'\n});\n\n})();//@ sourceURL=adminApp/ccAdminApp.js")