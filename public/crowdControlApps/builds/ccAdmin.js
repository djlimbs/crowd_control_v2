eval("(function() {\n\nEmber.TEMPLATES[\"main\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"container\\\">\\n\t<div class=\\\"clearfix\\\">\\n\t\t<span class=\\\"pull-right main-label\\\">Crowd Control</span>\\n\t\t<ul class=\\\"nav nav-tabs\\\">\\n            <li class=\\\"active\\\"><a href=\\\"#\\\">Edit Songs</a></li>\\n            <li class=\\\"active\\\"><a href=\\\"#\\\">Edit Playlists</a></li>\\n            <li class=\\\"active\\\"><a href=\\\"#\\\">Edit Tabs</a></li>\\n\t    </ul>\\n\t</div>\\n\t\\n    \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\t\\n    <div class=\\\"footer\\\">\\n\t\t<p>&copy; Erika 2014</p>\\n\t</div>\\n</div>\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"songs\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                    <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowPlaylist\", \"\", {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></li>\\n                \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"header\\\" style=\\\"margin-top:19px;\\\">\\n    <div class=\\\"pull-right menu-items\\\">\\n        <div class=\\\"btn-group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                Show <span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n                <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowAllSongs\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">All Songs</a></li>\\n                \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"allPlaylists\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                <li class=\\\"divider\\\"></li>\\n                <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowPlays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Plays</a></li>\\n                <li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowNays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Nays</a></li>\\n            </ul>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Print</button>\\n    </div>\\n    <h3 class=\\\"pb0\\\">Edit Songs</h3>\\n    <p>blabla</p>\\n</div>\\n\");\n  return buffer;\n  \n});\n\n})();//@ sourceURL=adminApp/templates.js")

eval("(function() {\n\n// Kick off Ember\nCCAdmin = Ember.Application.create({\n    rootElement: '#application',\n});\n\n// Controllers\nCCAdmin.MainController = Ember.ObjectController.extend({\n\n});\n\nCCAdmin.SongsController = Ember.ObjectController.extend({\n\n});\n\n\n// Routes\nCCAdmin.MainRoute = Ember.Route.extend({\n    model: function() {\n        return new Ember.RSVP.Promise(function(resolve, reject) {\n            var coupleData = Ember.Object.create();\n            console.log('herere')\n            dpd.users.me(function(result, error) {\n                console.log(result)\n                var emberObject = Ember.Object.create(result);\n                resolve(emberObject);\n            });\n        });\n    },\n    afterModel: function() {\n        this.transitionTo('songs');\n    }\n});\n\nCCAdmin.SongsRoute = Ember.Route.extend({\n    model: function() {\n        return this.modelFor('main');\n    }\n});\n\n// Router\nCCAdmin.Router.map(function() {\n    this.resource('main', { path: '/' }, function() {\n        this.resource('songs', { path: '/songs'});\n        this.resource('playlists', { path: '/playlists'});\n        this.resource('tabs', { path: '/tabs'});\n        this.resource('users', { path: '/users'});\n    });\n});\n\n// This setting disables the detail routing from showing up in the navbar.\nCCAdmin.Router.reopen( {\n    location: 'none'\n});\n\n})();//@ sourceURL=adminApp/ccAdminApp.js")