eval("(function() {\n\nEmber.TEMPLATES[\"main\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashContexts, hashTypes, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"container mt10\\\">\\n\t<div class=\\\"header clearfix\\\">\\n        <ul class=\\\"nav nav-pills pull-right\\\">\\n          \t<li class=\\\"active\\\">\\n            \t<a href=\\\"#\\\">Login</a>\\n          \t</li>\\n          \t<li>\\n            \t<a href=\\\"#\\\">About</a>\\n          \t</li>\\n          \t<li>\\n            \t<a href=\\\"#\\\">Contact</a>\\n          \t</li>\\n        </ul>\\n        \\n    </div>\\n\t<div class=\\\"login-form\\\">\\n        <h2 class=\\\"form-signin-heading\\\">Come on in</h2>\\n        \");\n  hashContexts = {'type': depth0,'class': depth0,'placeholder': depth0,'value': depth0};\n  hashTypes = {'type': \"STRING\",'class': \"STRING\",'placeholder': \"STRING\",'value': \"ID\"};\n  options = {hash:{\n    'type': (\"text\"),\n    'class': (\"form-control mb10\"),\n    'placeholder': (\"Email address\"),\n    'value': (\"username\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || (depth0 && depth0.input)),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n        \");\n  hashContexts = {'type': depth0,'class': depth0,'placeholder': depth0,'value': depth0};\n  hashTypes = {'type': \"STRING\",'class': \"STRING\",'placeholder': \"STRING\",'value': \"ID\"};\n  options = {hash:{\n    'type': (\"password\"),\n    'class': (\"form-control\"),\n    'placeholder': (\"Password\"),\n    'value': (\"password\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || (depth0 && depth0.input)),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n        <label class=\\\"checkbox\\\">\\n          \t<input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n        </label>\\n        <button class=\\\"btn btn-lg btn-primary btn-block\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickSignIn\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Sign in</button>\\n    </div>\\n\t<div class=\\\"footer\\\">\\n\t\t<p>&copy; Erika 2014</p>\\n\t</div>\\n</div>\");\n  return buffer;\n  \n});\n\n})();//@ sourceURL=loginApp/templates.js")

eval("(function() {\n\n// Kick off Ember\nCCLogin = Ember.Application.create({\n    rootElement: '#application',\n});\n\n\n// Routes\nCCLogin.MainRoute = Ember.Route.extend({\n    actions: {\n    \tclickSignIn: function() {\n    \t\tcontroller = this.controllerFor('main');\n    \t\tconsole.log(controller.get('username'));\n    \t\tdpd.users.login({\n                username: controller.get('username'),\n                password: controller.get('password')\n            }, function(result, error) {\n            \tif (!Ember.isNone(error)) {\n            \t\tconsole.log('invalid');\n            \t} else if (!Ember.isNone(result)) {\n            \t\tdpd.users.get(result.uid, {'onlyUserType': true}, function(me) {\n            \t\t\tif (me.userType === 'couple') {\n            \t\t\t\twindow.location.href = 'couples.html';\n            \t\t\t} else if (me.userType === 'admin') {\n                            window.location.href = 'admin.html';\n                        }\n            \t\t});\n            \t}\n            });\n    \t}\n    }\n});\n\n// Router\nCCLogin.Router.map(function() {\n    this.route('main', { path: '/' });\n});\n\n// This setting disables the detail routing from showing up in the navbar.\nCCLogin.Router.reopen( {\n    location: 'none'\n});\n\n})();//@ sourceURL=loginApp/ccLoginApp.js")