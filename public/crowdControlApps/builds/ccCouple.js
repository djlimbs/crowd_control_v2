eval("(function() {\n\nEmber.TEMPLATES[\"djCharts\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<div class=\\\"header\\\" style=\\\"margin-top:19px;\\\">\\n\t<div class=\\\"pull-right menu-items\\\">\\n\t\t<div class=\\\"btn-group\\\">\\n\t\t  \t<button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n\t\t    \tShow me <span class=\\\"caret\\\"></span>\\n\t\t  \t</button>\\n\t\t  \t<ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n\t\t  \t\t<li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowAllSongs\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">All Songs</a></li>\\n\t\t  \t\t<li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowPlays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Plays</a></li>\\n\t\t    \t<li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowNays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Nays</a></li>\\n\t\t  \t</ul>\\n\t\t</div>\\n\t\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\">Print</button>\\n\t</div>\\n\t<h3 class=\\\"pb0\\\">DJ Charts</h3>\\n\t<p>Our DJs keep a keen eye on the pulse of the dancefloor, here are some buzzing tunes\\n</div>\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"foundation\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n\t\t  \t\t\t<li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowCategory\", \"\", {hash:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a></li>\\n\t\t  \t\t\");\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n\t\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"displayedCategories\", {hash:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\");\n  return buffer;\n  }\nfunction program4(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n\t\t<div class=\\\"row text-center\\\">\\n\t\t\t<div style=\\\"padding-bottom:10px;\\\">\\n\t\t\t\t<h4 class=\\\"mb0\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</h4>\\n\t\t\t\t<p><small><i class=\\\"text-muted\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"description\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</i></small></p>\\n\t\t\t</div>\\n\t\t\t\");\n  hashContexts = {'itemController': depth0};\n  hashTypes = {'itemController': \"STRING\"};\n  stack1 = helpers.each.call(depth0, \"songs\", {hash:{\n    'itemController': (\"song\")\n  },inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t\t</div>\\n\t\");\n  return buffer;\n  }\nfunction program5(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n\t\t\t\t<div class=\\\"col-lg-3 col-md-4 col-sm-6 col-xs-6\\\">\\n\t\t\t\t\t<div class=\\\"song-choice\\\">\\n\t\t\t\t\t\t<span \");\n  hashContexts = {'class': depth0};\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\"score\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['bind-attr'] || (depth0 && depth0['bind-attr'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"bind-attr\", options))));\n  data.buffer.push(\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"displayText\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</span>\\n\t\t\t\t\t\t<div class=\\\"rate\\\">\\n\t\t\t\t\t\t\t<span class=\\\"clickable glyphicon glyphicon-music\\\"></span> \\n\t\t\t\t\t\t\t&#8226; <small class=\\\"clickable\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickPlay\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Play</small> \\n\t\t\t\t\t\t\t&#8226; <small class=\\\"clickable\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickNay\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Nay</small> \\n\t\t\t\t\t\t\t&#8226; <small class=\\\"clickable\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickEitherWay\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Either Way</small>\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t\");\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n\t<div class=\\\"row text-center\\\">\\n\t\t<div style=\\\"padding-bottom:10px;\\\">\\n\t\t\t<h4 class=\\\"mb0\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"preferenceText\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</h4>\\n\t\t</div>\\n\t\t\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"noSongsRated\", {hash:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t\t\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"displayedCategories\", {hash:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t</div>\\n\");\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n\t\t\tNothing picked yet! See them <a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowAllSongs\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">all</a> to start rating songs!\\n\t\t\");\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes;\n  data.buffer.push(\"\\n\t\t\t<div>\\n\t\t\t\t\");\n  hashContexts = {'itemController': depth0};\n  hashTypes = {'itemController': \"STRING\"};\n  stack1 = helpers.each.call(depth0, \"songs\", {hash:{\n    'itemController': (\"song\")\n  },inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t\t\t</div>\\n\t\t\");\n  return buffer;\n  }\nfunction program11(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n\t\t\t\t\t<div class=\\\"song-choice\\\">\\n\t\t\t\t\t\t<span>\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"displayText\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</span>\\n\t\t\t\t\t\t<div class=\\\"rate\\\">\\n\t\t\t\t\t\t\t<span class=\\\"clickable glyphicon glyphicon-music\\\"></span> \\n\t\t\t\t\t\t\t\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.unless.call(depth0, \"isPlay\", {hash:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t\t\t\t\t\t\t\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.unless.call(depth0, \"isNay\", {hash:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t\t\t\t\t\t\t&#8226; <small class=\\\"clickable\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickEitherWay\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Either Way</small>\\n\t\t\t\t\t\t</div>\\n\t\t\t\t\t</div>\\n\t\t\t\t\");\n  return buffer;\n  }\nfunction program12(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"&#8226; <small class=\\\"clickable\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickPlay\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Play</small> \");\n  return buffer;\n  }\n\nfunction program14(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"&#8226; <small class=\\\"clickable\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickNay\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Nay</small> \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"header\\\" style=\\\"margin-top:19px;\\\">\\n\t<div class=\\\"pull-right menu-items\\\">\\n\t\t<div class=\\\"btn-group\\\">\\n\t\t  \t<button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n\t\t    \tShow <span class=\\\"caret\\\"></span>\\n\t\t  \t</button>\\n\t\t  \t<ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n\t\t  \t\t<li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowAllSongs\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">All Songs</a></li>\\n\t\t  \t\t\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"allCategories\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t\t  \t\t<li class=\\\"divider\\\"></li>\\n\t\t  \t\t<li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowPlays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Plays</a></li>\\n\t\t    \t<li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowNays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Nays</a></li>\\n\t\t  \t</ul>\\n\t\t</div>\\n\t\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\">Print</button>\\n\t</div>\\n\t<h3 class=\\\"pb0\\\">Pick some songs</h3>\\n\t<p>Hover over songs to tell the DJ to \\\"Play\\\" the track, say \\\"Nay\\\" if it's requested, or go \\\"Either way\\\"\\n</div>\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.unless.call(depth0, \"preferenceFilter\", {hash:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"preferenceFilter\", {hash:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"guestRequests\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, hashContexts, hashTypes;\n  data.buffer.push(\"\\n\t\t\");\n  hashContexts = {'itemController': depth0};\n  hashTypes = {'itemController': \"STRING\"};\n  stack1 = helpers.each.call(depth0, \"songs\", {hash:{\n    'itemController': (\"song\")\n  },inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\t\");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n\t\t\t\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"displayText\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"rating\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\t\t\");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"header\\\" style=\\\"margin-top:19px;\\\">\\n\t<div class=\\\"pull-right menu-items\\\">\\n\t\t<div class=\\\"btn-group\\\">\\n\t\t  \t<button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n\t\t    \tShow me <span class=\\\"caret\\\"></span>\\n\t\t  \t</button>\\n\t\t  \t<ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n\t\t  \t\t<li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowAllSongs\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">All Songs</a></li>\\n\t\t  \t\t<li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowPlays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Plays</a></li>\\n\t\t    \t<li><a href=\\\"#\\\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clickShowNays\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Just Nays</a></li>\\n\t\t  \t</ul>\\n\t\t</div>\\n\t\t<button type=\\\"button\\\" class=\\\"btn btn-default\\\">Print</button>\\n\t</div>\\n\t<h3 class=\\\"pb0\\\">See what your guests picked</h3>\\n\t<p>Here's a list of what your guests requested, thumbs up or veto them</p>\\n\\n\t\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"categories\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n</div>\");\n  return buffer;\n  \n});\n\nEmber.TEMPLATES[\"main\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, stack2, hashContexts, hashTypes, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"<a href=\\\"#\\\">Foundation List</a>\");\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"<a href=\\\"#\\\">Guest Requests</a>\");\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  data.buffer.push(\"<a href=\\\"#\\\">DJ Charts</a>\");\n  }\n\n  data.buffer.push(\"<div class=\\\"container\\\">\\n\t<div class=\\\"clearfix\\\">\\n\t\t<span class=\\\"pull-right main-label\\\">Crowd Control</span>\\n\t\t<ul class=\\\"nav nav-tabs\\\">\\n        \t\");\n  hashContexts = {'tagName': depth0};\n  hashTypes = {'tagName': \"STRING\"};\n  options = {hash:{\n    'tagName': (\"li\")\n  },inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"foundation\", options) : helperMissing.call(depth0, \"link-to\", \"foundation\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n        \t\");\n  hashContexts = {'tagName': depth0};\n  hashTypes = {'tagName': \"STRING\"};\n  options = {hash:{\n    'tagName': (\"li\")\n  },inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"guestRequests\", options) : helperMissing.call(depth0, \"link-to\", \"guestRequests\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n        \t\");\n  hashContexts = {'tagName': depth0};\n  hashTypes = {'tagName': \"STRING\"};\n  options = {hash:{\n    'tagName': (\"li\")\n  },inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"djCharts\", options) : helperMissing.call(depth0, \"link-to\", \"djCharts\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n\t    </ul>\\n\t</div>\\n\t\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\t<div class=\\\"footer\\\">\\n\t\t<p>&copy; Erika 2014</p>\\n\t</div>\\n</div>\");\n  return buffer;\n  \n});\n\n})();//@ sourceURL=coupleApp/templates.js")

eval("(function() {\n\n// Kick off Ember\nCCCouple = Ember.Application.create({\n    rootElement: '#application',\n});\n\n\nFixtures = Ember.Object.create({\n\n});\n\nCCCouple.CoupleData = Ember.Object.extend({\n\n});\n\nCCCouple.CoupleData.reopenClass({\n    getData: function() {\n        return new Ember.RSVP.Promise(function(resolve, reject) {\n            var coupleData = Ember.Object.create();\n            dpd.users.me(function(result, error) {\n                var emberObject = Ember.Object.create(result);\n                console.log(emberObject)\n                a = emberObject;\n            });\n           /* dpd.playlists.get(function(result, error) {\n                console.log('*** result')\n                console.log(result)\n                console.log('*** error')\n                console.log(error)\n                a = result;\n            });*/\n            console.log(coupleData);\n            resolve(PrototypeData);\n        });\n    }\n});\n\n// Controllers\nCCCouple.FoundationController = Ember.ObjectController.extend({\n    allCategories: function() {\n        return this.get('songs').getEach('categories').reduce(function(a,b) { return a.concat(b); }).uniq();\n    }.property('songs'),\n    displayedCategories: function() {\n        var songsData = this.get('songs');\n        var categoriesData = this.get('categoriesData');\n        var categoryFilter = this.get('categoryFilter');\n        var preferenceFilter = this.get('preferenceFilter');\n        var categoryList = !Ember.isNone(categoryFilter) ? Ember.A([categoryFilter]) : this.get('allCategories');\n        var categories = [];\n        categoryList.forEach(function(category) {\n            categories.addObject({\n                categoryName: category,\n                categoryDescription: categoriesData.findBy('name', category).description,\n                songs: songsData.filter(function(song) {\n                    return !Ember.isNone(preferenceFilter) ? song.categories.indexOf(category) !== -1 && song.rating === preferenceFilter \n                                                                : song.categories.indexOf(category) !== -1;\n                })\n            });\n        });\n\n        return categories;\n    }.property('songs', 'categoryFilter', 'preferenceFilter'),\n    preferenceText: function() {\n        return this.get('preferenceFilter') === 'play' ? 'Plays' : 'Nays';\n    }.property('preferenceFilter'),\n    noSongsRated: function() {\n        return Ember.isEmpty(this.get('songs').filterBy('rating', this.get('preferenceFilter')));\n    }.property('songs', 'preferenceFilter'),\n    actions: {\n        clickShowCategory: function(categoryName) {\n            this.setProperties({\n                categoryFilter: categoryName.valueOf(),\n                preferenceFilter: undefined\n            });\n        },\n        clickShowAllSongs: function() {\n            this.setProperties({\n                categoryFilter: undefined,\n                preferenceFilter: undefined\n            });\n        },\n        clickShowPlays: function() {\n            this.setProperties({\n                categoryFilter: undefined,\n                preferenceFilter: 'play',\n            });\n        },\n        clickShowNays: function(preference) {\n            this.setProperties({\n                categoryFilter: undefined,\n                preferenceFilter: 'nay'\n            });\n        }\n    }\n});\n\nCCCouple.SongController = Ember.ObjectController.extend({\n    isPlay: function() {\n        return this.get('rating') === 'play';\n    }.property('rating'),\n    isNay: function() {\n        return this.get('rating') === 'nay';\n    }.property('rating'),\n    actions: {\n        clickPreview: function() {\n\n        },\n        clickPlay: function() {\n            this.set('rating', 'play');\n            this.get('parentController').notifyPropertyChange('songs');\n        },\n        clickNay: function() {\n            this.set('rating', 'nay');\n            this.get('parentController').notifyPropertyChange('songs');\n        },\n        clickEitherWay: function() {\n            this.set('rating', 'either-way');\n            this.get('parentController').notifyPropertyChange('songs');\n        }\n    }\n});\n\n// Routes\nCCCouple.MainRoute = Ember.Route.extend({\n    model: function() {\n        return CCCouple.CoupleData.getData();\n    },\n    afterModel: function() {\n        this.transitionTo('foundation');\n    }\n});\n\nCCCouple.FoundationRoute = Ember.Route.extend({\n    model: function() {\n        return this.modelFor('main');\n    }\n});\n\nCCCouple.GuestRequestsRoute = Ember.Route.extend({\n    model: function() {\n        return this.modelFor('main');\n    }\n});\n\nCCCouple.DjSuggestionsRoute = Ember.Route.extend({\n    model: function() {\n        return this.modelFor('main');\n    }\n});\n\n// Router\nCCCouple.Router.map(function() {\n    this.resource('main', { path: '/' }, function() {\n        this.resource('foundation', { path: '/foundation'});\n        this.resource('guestRequests', { path: '/guestRequests'});\n        this.resource('djSuggestions', { path: '/djSuggestions'});\n    });\n});\n\n// This setting disables the detail routing from showing up in the navbar.\nCCCouple.Router.reopen( {\n    location: 'none'\n});\n\n})();//@ sourceURL=coupleApp/ccCoupleApp.js")